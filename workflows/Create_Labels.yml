name: Ensure Standard Labels Across Repositories

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight

jobs:
  create-labels:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      administration: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Create Labels
        run: node create-labels.js

      - name: Install dependencies
        run: npm install @octokit/core

      - name: Create Labels Script
        run: |
          const { Octokit } = require("@octokit/core");
          const octokit = new Octokit({ auth: `token ${process.env.GITHUB_TOKEN}` });

          async function createLabels(owner, repo, labels) {
            for (const label of labels) {
              try {
                await octokit.request('POST /repos/{owner}/{repo}/labels', {
                  owner,
                  repo,
                  name: label.name,
                  color: label.color,
                  description: label.description
                });
              } catch (error) {
                if (error.status !== 422) { // 422 is the error for label already exists
                  console.error(`Failed to create label in ${repo}: ${error}`);
                }
              }
            }
          }

          async function ensureLabelsForOrg(org, labels) {
            const repos = await octokit.paginate(octokit.request('GET /orgs/{org}/repos', { org }));
            for (const repo of repos) {
              await createLabels(org, repo.name, labels);
            }
          }

          const labelsToEnsure = [
            { name: 'P1 - Highest', color: 'b22222', description: 'Critical priority; this issue must be addressed as soon as possible.' },
            { name: 'P2 - High', color: 'ff4500', description: 'High priority; important to address soon to maintain project momentum.' },
            { name: 'P3 - Medium', color: 'ff8c00', description: 'Moderately important; balance attention between higher and lower priorities.' },
            { name: 'P4 - Low', color: 'ffd700', description: 'Low importance; schedule accordingly behind higher priorities.' },
            { name: 'P5 - Lowest', color: '9acd32', description: 'This issue has the least impact and urgency. Address after higher priorities.' }
          ];

          ensureLabelsForOrg('WhyDRS', labelsToEnsure);
